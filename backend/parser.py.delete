import re
import json

def parse_model_output(raw_output):
    """
    Parses the model output to extract a JSON object.
    This is a temporary solution and will be replaced with a more robust
    streaming JSON parser.
    """
    # This regex is a bit of a hack to find the JSON part of the response.
    # It assumes the JSON starts with '{' and ends with '}'.
    match = re.search(r'\{.*\}', raw_output, re.DOTALL)
    if not match:
        return {"response": raw_output, "tool_calls": []}

    json_string = match.group(0)
    try:
        # Try to parse the extracted string as JSON
        return json.loads(json_string)
    except json.JSONDecodeError as e:
        print(f"JSON decode error: {e}")
        # If JSON parsing fails, return the text part and empty tool calls.
        return {
            "response": raw_output.replace(json_string, "").strip(),
            "tool_calls": [],
        }
